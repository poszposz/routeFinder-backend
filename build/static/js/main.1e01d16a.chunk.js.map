{"version":3,"sources":["Screens/InputScreen/InputScreen.js","Screens/MapScreen/MapScreen.js","index.js"],"names":["InputScreen","props","client","axios","create","baseURL","timeout","responseType","handleStartLocationChange","event","setState","startLocation","target","value","handleEndLocationChange","endLocation","handleSubmit","console","log","state","shouldTranstionToMap","this","history","push","to","pathname","className","onSubmit","htmlFor","id","type","onChange","onClick","Component","MapScreen","error","waypointsLoaded","waypoints","center","zoom","location","fetch","then","response","json","catch","Map","style","width","height","window","innerHeight","TileLayer","attribution","url","Polyline","positions","color","routing","createBrowserHistory","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e01d16a.chunk.js","sourcesContent":["import React from 'react';\nimport { \n  Component,\n} from 'react';\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios';\nimport './InputScreen.css';\n\nclass InputScreen extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      startLocation: '',\n      endLocation: '',\n    };\n  }\n\n  client = axios.create({\n    baseURL: 'http://localhost:3001/',\n    timeout: 10000,\n    responseType: 'json'\n  });\n\n  handleStartLocationChange = (event) => {\n    this.setState({ startLocation: event.target.value });\n  }\n\n  handleEndLocationChange = (event) => {\n    this.setState({ endLocation: event.target.value });\n  }\n\n  handleSubmit = () => {\n    console.log(`Submitted with start: ${this.state.startLocation}, end: ${this.state.endLocation}`);\n    this.setState({ shouldTranstionToMap: true})\n  }\n\n  render() {\n    if (this.state.shouldTranstionToMap) {\n      this.props.history.push('/');\n      return <Redirect to={{\n        pathname: '/map', \n        state: { startLocation: this.state.startLocation, endLocation: this.state.endLocation}\n      }}\n      />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Enter start and end locations:</label>\n            <br></br>\n            <br></br>\n            <input\n              id=\"start_location\"\n              type=\"text\"\n              value={this.state.startLocation}\n              onChange={this.handleStartLocationChange}\n            />\n            <input\n              id=\"end_location\"\n              type=\"text\"\n              value={this.state.endLocation}\n              onChange={this.handleEndLocationChange}\n            />\n            <button type=\"submit\" onClick={this.handleSubmit}>\n              Submit\n            </button>\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default InputScreen;\n","import React from 'react';\nimport { \n  Component,\n} from 'react';\nimport { Map, Polyline, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css';\nimport './MapScreen.css';\n  \nclass MapScreen extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      waypointsLoaded: false,\n      waypoints: null,\n      center: [50.062004, 19.937522],\n      zoom: 13\n    };\n  }\n\n  componentDidMount() {\n    const { startLocation, endLocation } = this.props.location.state;\n    console.log(`Starting: ${this.props.location.state.startLocation}`);\n    console.log(`Ending: ${this.props.location.state.endLocation}`);\n\n    fetch(`http://localhost:3001/api/routes/visualizationPoints?startLocation=${startLocation}&endLocation=${endLocation}`)\n        .then(response => response.json())\n        .then(json => {\n          this.setState({ waypointsLoaded: true, waypoints: json });\n        })\n        .catch(error => {\n          this.setState({ error });\n        });;\n  }\n  \n  render() {\n    const { startLocation, endLocation } = this.props.location.state;\n    const { waypointsLoaded, waypoints, error } = this.state;\n    if (error != null) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n          <label htmlFor=\"name\">Apologies, unable to route between this two locations</label>\n          </header>\n        </div>\n      );\n    }\n    if (!waypointsLoaded) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n          <label htmlFor=\"name\">Loading route from {startLocation} to {endLocation}...</label>\n          </header>\n        </div>\n      );\n    }\n    console.log('Should render the map');\n    return (\n        <div id=\"mapid\">\n          <Map center={this.state.center} zoom={this.state.zoom} style={{width: '100%', height: window.innerHeight}}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n            />\n            <Polyline positions={waypoints} color={'blueviolet'}/>\n          </Map>\n        </div>\n    );\n  }\n}\n\nexport default MapScreen;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history';\nimport './index.css'\nimport InputScreen from './Screens/InputScreen/InputScreen';\nimport MapScreen from './Screens/MapScreen/MapScreen';\n\nconst routing = (\n  <Router history={createBrowserHistory}>\n    <div>\n      <Route exact path=\"/\" component={InputScreen} />\n      <Route path=\"/map\" component={MapScreen} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n"],"sourceRoot":""}